version: "3"
services:
  sql:
    image: albiondata/sql:latest
    container_name: aodata-sql-client
    restart: on-failure
    command: "-n 'nats://${NATS_USER}:${NATS_PWD}@nats:4222' -s 'server=mysql;port=3306;database=${MYSQL_DB};user=${MYSQL_USER};password=${MYSQL_PWD}' -d"
    depends_on: 
      - mysql
      - nats
    networks: 
      - albiondata
  api:
    image: albiondata/api:latest
    container_name: aodata-api
    restart: on-failure
    command: "-s 'server=mysql;port=3306;database=${MYSQL_DB};user=${MYSQL_USER};password=${MYSQL_PWD}' -d"
    ports:
      - 8056:80
    depends_on: 
      - mysql
    networks: 
      - albiondata
  gate:
    image: albiondata/gate:latest
    container_name: aodata-gate
    restart: on-failure
    environment:
      ENABLE_NATS: 1
      NATS_URI: nats://${NATS_USER}:${NATS_PWD}@nats:4222
      POW_DIFFICULITY: ${POW_DIFFICULITY:-35}
      POW_PORT: ${POW_PORT:-4223}      
      POW_EXPIRE_SECONDS: 300
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_DB: ${REDIS_DB:-2}
    ports:
      - 4223:4223
    depends_on: 
      - nats
      - redis
    networks: 
      - albiondata
    logging:
      options:
        tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
  deduper:
    image: albiondata/deduper:latest
    container_name: aodata-deduper
    restart: on-failure
    command: "-o nats://${NATS_USER}:${NATS_PWD}@nats:4222 -n 'nats://${NATS_USER}:${NATS_PWD}@nats:4222' -r 'redis:6379' -d"
    depends_on: 
      - nats
      - redis
    networks: 
      - albiondata
  update-check:
    image: albiondata/albion-online-update-check:latest
    container_name: aodata-update-check
    environment:
      ADDITIONAL_MESSAGE_CONTENT: ${ADDITIONAL_MESSAGE_CONTENT}
      DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL}
    volumes:
      - "./update-check:/usr/src/app/config"
  nats:
    image: nats
    container_name: aodata-nats
    restart: on-failure
    environment:
      NATS_USER: ${NATS_USER}
      NATS_PWD: ${NATS_PWD}
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222
    volumes:
      - ./nats/nats-server.conf:/etc/nats/nats-server.conf
    command: "-c /etc/nats/nats-server.conf"
    networks: 
      - albiondata
  mysql:
    image: mariadb:10.5.10
    container_name: aodata-mysql
    restart: on-failure
    environment:
      MARIADB_ROOT_PASSWORD: ${MYSQL_PWD}
    ports:
      - 3306:3306
    volumes:
      - ./mysqldata:/var/lib/mysql
      - ./mysqlconfig/70-server.cnf:/etc/mysql/mariadb.conf.d/70-server.cnf
    networks: 
      - albiondata
  mysql-backup:
    image: databack/mysql-backup:latest
    container_name: aodata-gate-mysql-backup
    restart: on-failure
    user: "0"
    environment:
      DB_SERVER: mysql
      DB_PORT: 3306
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PWD}
      DB_NAMES: ${MYSQL_DB}
      DB_DUMP_FREQ: 1440 # Once a day
      DB_DUMP_BEGIN: 0100 # 01:00am
      DB_DUMP_TARGET: /db
      # We are skipping the drops so we don't accidentally kill someone's DB
      # They will need to drop the database/tables manually in order to use the script
      MYSQLDUMP_OPTS: "--opt --skip-add-drop-database --skip-add-drop-table"
      # DB_DUMP_DEBUG: true
    volumes:
      - "./ao_database_export:/db"
      - "./mysql-backup:/scripts.d"
    depends_on: 
      - mysql
    networks: 
    - albiondata
  redis:
    image: redis
    container_name: aodata-redis
    restart: on-failure
    ports:
      - 6379:6379
    volumes:
      - ./redisdata:/data
    command: redis-server --appendonly yes
    networks: 
      - albiondata
  proxy:
    image: jc21/nginx-proxy-manager:latest
    container_name: aodata-nginx-proxy-manager
    restart: always
    environment:
      X_FRAME_OPTIONS: "sameorigin"
      DB_SQLITE_FILE: "/data/database.sqlite"
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    volumes:
      - ./nginx_proxy_manager/data:/data
      - ./nginx_proxy_manager/letsencrypt:/etc/letsencrypt
      - ./nginx_error_pages:/data/nginx/error_pages
      - ./ao_database_export:/data/nginx/ao_database_export
    networks: 
      - albiondata
  nginx:
    image: nginx
    container_name: aodata-website-nginx
    restart: on-failure
    volumes:
      - "$PWD/web:/usr/share/nginx/html:ro"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro"
    ports:
      - 8080:80        
networks:
  albiondata:
